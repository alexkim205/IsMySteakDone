{"version":3,"sources":["media/steak-rare.png","media/steak-medium-rare.jpg","media/steak-medium.jpg","media/face.png","media/palm.png","media/palm-rare.png","media/palm-medium-rare.png","media/palm-medium.png","media/palm-well-done.png","media/fist.png","media/steak-well-done.jpg","pages/Quiz/questions.js","helper.js","pages/App/style.js","pages/Navbar.js","components/Container.layout.js","components/TitleSection.component.js","components/Section.component.js","components/Button.component.js","pages/Home/index.js","components/TwoColumn.layout.js","components/Image.component.js","components/ReadingProgress.component.js","components/ScrollStyled.component.js","components/Scrollbar.component.js","pages/ScrollingPageTemplate.js","pages/Levels/index.js","pages/Palm/index.js","pages/Face/index.js","pages/Fist/index.js","pages/CheatSheet/index.js","pages/Quiz/Q1.component.js","components/HoverMedia.component.js","pages/Quiz/Q2.component.js","pages/Quiz/Q3.component.js","pages/Quiz/QuestionsSection.component.js","pages/Quiz/index.js","pages/Navigator.js","pages/Footer.js","pages/App/index.js","index.js"],"names":["module","exports","QuestionTypes","TactileTypes","DonenessTypes","RARE","MEDIUM_RARE","MEDIUM","WELL_DONE","FingerTypes","INDEX","MIDDLE","RING","PINKY","FaceAreaTypes","CHEEK","CHIN","NOSE","FOREHEAD","FistTypes","RELAXED","SQUEEZE","CLENCH","questions","id","name","scenario","part","type","validate","answer","correctFeedback","incorrectFeedback","qInfo","setup","prompt","suffix","finger","media","img","steakrare","faceArea","steakmedium","fistType","steakmediumrare","breakpoints","xxs","xs","s","m","l","xl","breakpoint","styledBreakpoint","lorem","LoremIpsum","handleButtonColor","val","refVal","hasSubmitted","isCorrect","redirectQuiz","history","useHistory","location","useLocation","cachedProgress","JSON","parse","localStorage","getItem","isQuizFinished","lastUnansweredQuestion","lastScenario","lastPart","pathname","push","RootBackground","styled","div","Body","Container","nav","NavItem","Link","selected","Navbar","to","className","startsWith","center","TitleSection","children","otherProps","Section","down","ButtonLink","disabled","Button","button","icon","success","failure","Home","TwoColumnLayout","Left","width","minWidth","Right","Bar","attrs","height","style","ReadingProgress","useState","readingProgress","setReadingProgress","scrollListener","document","body","element","totalHeight","clientHeight","offsetTop","window","innerHeight","windowScrollTop","pageYOffset","documentElement","scrollTop","useEffect","addEventListener","removeEventListener","StyledStickyContainer","StickyContainer","ScrollNavLink","ScrollLink","ScrollToTopButton","Scrollbar","sections","scrollTo","scrollToTop","Events","scrollEvent","register","scrollSpy","update","remove","topOffset","map","i","key","activeClass","spy","hashSpy","smooth","duration","offset","onClick","scroll","size","ScrollingPageTemplate","title","subtitle","bottomButtons","lastAnchorRef","useRef","additionalHeight","setAdditionalHeight","ref","current","topOfLastSection","getBoundingClientRect","top","scrollY","pageScrollNeeded","scrollHeight","offsetNeeded","calculateAdditionalHeight","img2","text","length","src","levels","generateSentences","Levels","tests","Palm","Face","Fist","CheatSheet","handleSubmit","useParams","value","setValue","marks","Array","keys","reduce","obj","k","cachedData","selectedVal","min","max","defaultValue","step","onChange","v","e","preventDefault","ImageWrapper","HoverArea","pos","left","fingerComponentData","tooltip","palmwelldone","alt","palmmedium","palmmediumrare","palmrare","faceComponentData","BaseHover","basepng","data","data-tip","data-for","p","palmpng","facepng","fistValue","setFistValue","fistpng","Object","fist","replace","done","handleClick","Feedback","span","right","QuestionSection","currQ","find","q","parseInt","num_questions","curr_idx","getPrev","next_idx","getNext","getPrevAndNextQuestionPageRoute","prevRoute","nextRoute","setHasSubmitted","setIsCorrect","setItem","stringify","QuizStart","QuizQuestions","QuizEnd","a","b","lastQ","slice","forEach","removeItem","QuizRoot","path","useRouteMatch","exact","Navigator","Quiz","Footer","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.07e8f690.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/steak-rare.f0c6f786.png\";","module.exports = __webpack_public_path__ + \"static/media/steak-medium-rare.16b955f0.jpg\";","module.exports = __webpack_public_path__ + \"static/media/steak-medium.083b512f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/face.c0da8da7.png\";","module.exports = __webpack_public_path__ + \"static/media/palm.cf2bd066.png\";","module.exports = __webpack_public_path__ + \"static/media/palm-rare.59a59359.png\";","module.exports = __webpack_public_path__ + \"static/media/palm-medium-rare.dbf8edca.png\";","module.exports = __webpack_public_path__ + \"static/media/palm-medium.c4f11b87.png\";","module.exports = __webpack_public_path__ + \"static/media/palm-well-done.a236fd26.png\";","module.exports = __webpack_public_path__ + \"static/media/fist.3575ce4c.png\";","module.exports = __webpack_public_path__ + \"static/media/steak-well-done.838d63ff.jpg\";","import steakrare from \"../../media/steak-rare.png\";\r\nimport steakmediumrare from \"../../media/steak-medium-rare.jpg\";\r\nimport steakmedium from \"../../media/steak-medium.jpg\";\r\nimport steakwelldone from \"../../media/steak-well-done.jpg\";\r\n\r\nexport const QuestionTypes = {\r\n  NUMBER: \"NUMBER\",\r\n  TACTILE: \"TACTILE\",\r\n  MULTIPLE_CHOICE: \"MULTIPLE_CHOICE\",\r\n};\r\n\r\nexport const TactileTypes = {\r\n  FACE: \"FACE\",\r\n  FIST: \"FIST\",\r\n  PALM: \"PALM\",\r\n};\r\n\r\nexport const DonenessTypes = {\r\n  RARE: \"RARE\",\r\n  MEDIUM_RARE: \"MEDIUM_RARE\",\r\n  MEDIUM: \"MEDIUM\",\r\n  WELL_DONE: \"WELL_DONE\",\r\n};\r\n\r\nexport const FingerTypes = {\r\n  INDEX: DonenessTypes.RARE,\r\n  MIDDLE: DonenessTypes.MEDIUM_RARE,\r\n  RING: DonenessTypes.MEDIUM,\r\n  PINKY: DonenessTypes.PINKY,\r\n};\r\n\r\nexport const FaceAreaTypes = {\r\n  CHEEK: DonenessTypes.RARE,\r\n  CHIN: DonenessTypes.MEDIUM_RARE,\r\n  NOSE: DonenessTypes.MEDIUM,\r\n  FOREHEAD: DonenessTypes.WELL_DONE,\r\n};\r\n\r\nexport const FistTypes = {\r\n  RELAXED: DonenessTypes.RARE,\r\n  SQUEEZE: DonenessTypes.MEDIUM,\r\n  CLENCH: DonenessTypes.WELL_DONE,\r\n};\r\n\r\nexport const questions = [\r\n  {\r\n    id: \"s1p1\",\r\n    name: \"Scenario 1 Part 1\",\r\n    scenario: 1,\r\n    part: 1,\r\n    type: QuestionTypes.NUMBER,\r\n    validate: (answer) => answer >= 3.5 && answer <= 4.5,\r\n    correctFeedback:\r\n      \"Correct! A medium-rare steak should be seared for 3-4 minutes on each side on medium-high.\",\r\n    incorrectFeedback:\r\n      \"Incorrect. A medium-rare steak should be seared for 3-4 minutes on each side on medium-high.\",\r\n    qInfo: {\r\n      setup:\r\n        \"You receive an order for a medium-rare ribeye. You’re given a 1 inch thick 8oz ribeye.\",\r\n      prompt: \"How long should you sear each side of the steak?\",\r\n      suffix: \"minutes\",\r\n    },\r\n  },\r\n  {\r\n    id: \"s1p2\",\r\n    name: \"Scenario 1 Part 2\",\r\n    scenario: 1,\r\n    part: 2,\r\n    type: QuestionTypes.TACTILE,\r\n    validate: (finger) => FingerTypes[finger] === DonenessTypes.MEDIUM_RARE,\r\n    correctFeedback:\r\n      \"Correct! A medium-rare steak should be tested by connecting the thumb with the middle finger, and then feeling the palm area under your thumb.\",\r\n    incorrectFeedback:\r\n      \"Incorrect! A medium-rare steak should be tested by connecting the thumb with the middle finger, and then feeling the palm area under your thumb.\",\r\n    qInfo: {\r\n      setup:\r\n        \"After searing, you have a nice golden brown steak. Congrats!\\nIt looks nice on the outside, but you want to test if the steak really is medium-rare. You don’t want to puncture the steak with a thermometer, so you use the palm test.\",\r\n      prompt: \"Click the finger you touch your thumb to.\",\r\n      media: TactileTypes.PALM,\r\n    },\r\n  },\r\n  {\r\n    id: \"s1p3\",\r\n    name: \"Scenario 1 Part 3\",\r\n    scenario: 1,\r\n    part: 3,\r\n    type: QuestionTypes.MULTIPLE_CHOICE,\r\n    validate: (answer) => answer === DonenessTypes.RARE,\r\n    correctFeedback:\r\n      \"Correct! The customer is always right, it looks like your steak was a little underdone.\",\r\n    incorrectFeedback:\r\n      \"Incorrect. The customer is always right, it looks like your steak was actually rare.\",\r\n    qInfo: {\r\n      setup:\r\n        \"After conducting the palm test, it seems like your steak feels medium-rare. You send it off to the person who ordered it, but it’s returned to the kitchen with complaints that the steak isn’t done like they wanted. The cross-cut of the steak looks like this:\",\r\n      prompt: \"From this image, can you tell how done the steak is?\",\r\n      img: steakrare,\r\n    },\r\n  },\r\n  {\r\n    id: \"s2p1\",\r\n    name: \"Scenario 2 Part 1\",\r\n    scenario: 2,\r\n    part: 1,\r\n    type: QuestionTypes.NUMBER,\r\n    validate: (answer) => answer >= 1.5 && answer <= 3,\r\n    correctFeedback:\r\n      \"Correct! A rare steak should be seared for 1-2 minutes on each side on medium-high.\",\r\n    incorrectFeedback:\r\n      \"Incorrect. A rare steak should be seared for 1-2 minutes on each side on medium-high.\",\r\n    qInfo: {\r\n      setup:\r\n        \"You receive an order for a rare ribeye. You’re given a 1 inch thick 8oz ribeye.\",\r\n      prompt: \"How long should you sear each side of the steak?\",\r\n      suffix: \"minutes\",\r\n    },\r\n  },\r\n  {\r\n    id: \"s2p2\",\r\n    name: \"Scenario 2 Part 2\",\r\n    scenario: 2,\r\n    part: 2,\r\n    type: QuestionTypes.TACTILE,\r\n    validate: (faceArea) => FaceAreaTypes[faceArea] === DonenessTypes.RARE,\r\n    correctFeedback:\r\n      \"Correct! A rare steak should be tested by comparing the feel of the steak with touching your cheek area.\",\r\n    incorrectFeedback:\r\n      \"Incorrect! A rare steak should be tested by comparing the feel of the steak with touching your cheek area.\",\r\n    qInfo: {\r\n      setup:\r\n        \"After searing, you have a nice golden brown steak. Congrats!\\nIt looks nice on the outside, but you want to test if the steak really is rare. You don’t want to puncture the steak with a thermometer, so you use the face test.\",\r\n      prompt: \"Click the area of your face that you should feel.\",\r\n      media: TactileTypes.FACE,\r\n    },\r\n  },\r\n  {\r\n    id: \"s2p3\",\r\n    name: \"Scenario 2 Part 3\",\r\n    scenario: 2,\r\n    part: 3,\r\n    type: QuestionTypes.MULTIPLE_CHOICE,\r\n    validate: (answer) => answer === DonenessTypes.MEDIUM,\r\n    correctFeedback:\r\n      \"Correct! The customer is always right, it looks like your steak was a little overdone\",\r\n    incorrectFeedback:\r\n      \"Incorrect. The customer is always right, it looks like your steak was actually medium.\",\r\n    qInfo: {\r\n      setup:\r\n        \"After conducting the face test, it seems like your steak feels rare. You send it off to the person who ordered it, but it’s returned to the kitchen with complaints that the steak isn’t done like they wanted. The cross-cut of the steak looks like this:\",\r\n      prompt: \"From this image, can you tell how done the steak is?\",\r\n      img: steakmedium,\r\n    },\r\n  },\r\n  {\r\n    id: \"s3p1\",\r\n    name: \"Scenario 3 Part 1\",\r\n    scenario: 3,\r\n    part: 1,\r\n    type: QuestionTypes.NUMBER,\r\n    validate: (answer) => answer >= 6 && answer <= 8.5,\r\n    correctFeedback:\r\n      \"Correct! A well-done steak should be seared for 6.5-8 minutes on each side on medium-high.\",\r\n    incorrectFeedback:\r\n      \"Incorrect. A well-done steak should be seared for 6.5-8 minutes on each side on medium-high.\",\r\n    qInfo: {\r\n      setup:\r\n        \"You receive an order for a well-done ribeye. You’re given a 1 inch thick 8oz ribeye.\",\r\n      prompt: \"How long should you sear each side of the steak?\",\r\n      suffix: \"minutes\",\r\n    },\r\n  },\r\n  {\r\n    id: \"s3p2\",\r\n    name: \"Scenario 3 Part 2\",\r\n    scenario: 3,\r\n    part: 2,\r\n    type: QuestionTypes.TACTILE,\r\n    validate: (fistType) => FistTypes[fistType] === DonenessTypes.WELL_DONE,\r\n    correctFeedback:\r\n      \"Correct! A well-done steak should be tested by comparing the feel of the steak with the area between the thumb and index fingers when tightly clenching your fist.\",\r\n    incorrectFeedback:\r\n      \"Incorrect. A well-done steak should be tested by comparing the feel of the steak with the area between the thumb and index fingers when tightly clenching your fist.\",\r\n    qInfo: {\r\n      setup:\r\n        \"After searing, you have a nice golden brown steak. Congrats!\\nIt looks nice on the outside, but you want to test if the steak really is well-done. You don’t want to puncture the steak with a thermometer, so you use the fist test.\",\r\n      prompt:\r\n        \"Choose how much to clench your fist before feeling the highlighted area.\",\r\n      media: TactileTypes.FIST,\r\n    },\r\n  },\r\n  {\r\n    id: \"s3p3\",\r\n    name: \"Scenario 3 Part 3\",\r\n    scenario: 3,\r\n    part: 3,\r\n    type: QuestionTypes.MULTIPLE_CHOICE,\r\n    validate: (answer) => answer === DonenessTypes.MEDIUM_RARE,\r\n    correctFeedback:\r\n      \"Correct! The customer is always right, it looks like your steak was a little underdone\",\r\n    incorrectFeedback:\r\n      \"Incorrect. The customer is always right, it looks like your steak was actually medium-rare.\",\r\n    qInfo: {\r\n      setup:\r\n        \"After conducting the fist test, it seems like your steak feels well-done. You send it off to the person who ordered it, but it’s returned to the kitchen with complaints that the steak isn’t done like they wanted. The cross-cut of the steak looks like this:\",\r\n      prompt: \"From this image, can you tell how done the steak is?\",\r\n      img: steakmediumrare,\r\n    },\r\n  },\r\n];\r\n","/* eslint-disable react-hooks/rules-of-hooks */\r\nimport { useEffect } from \"react\";\r\nimport { useLocation, useParams, useHistory } from \"react-router-dom\";\r\nimport { LoremIpsum } from \"lorem-ipsum\";\r\nimport styledBreakpoint from \"@humblebee/styled-components-breakpoint\";\r\n\r\nimport { questions } from \"./pages/Quiz/questions\";\r\n\r\n// Creates an object with breakpoint utility methods.\r\nexport const breakpoints = {\r\n  xxs: 0,\r\n  xs: 320,\r\n  s: 576,\r\n  m: 768,\r\n  l: 992,\r\n  xl: 1200,\r\n};\r\nexport const breakpoint = styledBreakpoint(breakpoints);\r\n\r\nexport const calculateAdditionalHeight = (ref) => {\r\n  if (!ref || !ref.current) return 0;\r\n\r\n  const topOfLastSection =\r\n    ref.current.getBoundingClientRect().top + window.scrollY;\r\n  const pageScrollNeeded = document.body.scrollHeight - topOfLastSection;\r\n  const offsetNeeded = window.innerHeight - pageScrollNeeded + 100;\r\n  if (offsetNeeded > 0) {\r\n    return offsetNeeded;\r\n  }\r\n  return 0;\r\n};\r\n\r\nexport const lorem = new LoremIpsum();\r\n\r\nexport const scrollToTop = () => {\r\n  const { pathname } = useLocation();\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, [pathname]);\r\n\r\n  return null;\r\n};\r\n\r\nexport const getPrevAndNextQuestionPageRoute = () => {\r\n  const PARTS_PER_SCENARIO = 3;\r\n  const NUM_OF_SCENARIO = 3;\r\n  const num_questions = questions.length;\r\n  const { pathname } = useLocation();\r\n  const { scenario, part } = useParams();\r\n\r\n  const getNext = () => {\r\n    if (pathname === \"/quiz/start\") {\r\n      return \"/quiz/1/1\";\r\n    } else if (pathname === \"/quiz/end\") {\r\n      return null;\r\n    } else {\r\n      if (!scenario || !part) {\r\n        return null;\r\n      }\r\n      const next_idx =\r\n        (parseInt(scenario) - 1) * PARTS_PER_SCENARIO + parseInt(part);\r\n\r\n      if (next_idx === num_questions) {\r\n        // Current question is last one\r\n        return \"/quiz/end\";\r\n      } else {\r\n        return `/quiz/${questions[next_idx].scenario}/${questions[next_idx].part}`;\r\n      }\r\n    }\r\n  };\r\n\r\n  const getPrev = () => {\r\n    if (pathname === \"/quiz/1/1\") {\r\n      return \"/quiz/start\";\r\n    } else if (pathname === \"/quiz/end\") {\r\n      return `quiz/${NUM_OF_SCENARIO}/${PARTS_PER_SCENARIO}`;\r\n    } else {\r\n      if (!scenario || !part) {\r\n        return null;\r\n      }\r\n      const curr_idx =\r\n        (parseInt(scenario) - 1) * PARTS_PER_SCENARIO + parseInt(part) - 1;\r\n\r\n      if (curr_idx === 0) {\r\n        // Current question is first one\r\n        return \"/quiz/start\";\r\n      } else {\r\n        return `/quiz/${questions[curr_idx - 1].scenario}/${\r\n          questions[curr_idx - 1].part\r\n        }`;\r\n      }\r\n    }\r\n  };\r\n\r\n  return [getPrev(), getNext()];\r\n};\r\n\r\nexport const handleButtonColor = (val, refVal, hasSubmitted, isCorrect) => {\r\n  if (hasSubmitted) {\r\n    if (val === refVal) {\r\n      return isCorrect ? \"success\" : \"failure\";\r\n    } else {\r\n      return \"disabled\";\r\n    }\r\n  } else {\r\n    return \"choice\";\r\n  }\r\n};\r\n\r\nexport const redirectQuiz = () => {\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n\r\n  // Redirects to resume quiz progress last unanswered question.\r\n  const cachedProgress = JSON.parse(localStorage.getItem(\"quiz_progress\"));\r\n  if (!cachedProgress) {\r\n    // Quiz hasn't started\r\n    if (location.pathname !== \"/quiz/start\") {\r\n      history.push(`/quiz/start`);\r\n    }\r\n    return;\r\n  }\r\n  const {\r\n    isQuizFinished,\r\n    lastUnansweredQuestion: { scenario: lastScenario, part: lastPart },\r\n  } = cachedProgress;\r\n  if (isQuizFinished) {\r\n    if (location.pathname !== \"/quiz/end\") {\r\n      history.push(`/quiz/end`);\r\n    }\r\n  } else {\r\n    history.push(`/quiz/${lastScenario}/${lastPart}`);\r\n  }\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const RootBackground = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding-top: 50px; /* height of navbar */\r\n  width: 100vw;\r\n`;\r\n\r\nexport const Body = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  background-color: lightgreen;\r\n  min-height: 500px;\r\n`;\r\n","import React from \"react\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.nav`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  height: 50px;\r\n  display: flex;\r\n  flex-direction: row;\r\n  background-color: pink;\r\n  padding: 0 0.5em;\r\n  z-index: 5;\r\n\r\n  .spacer {\r\n    flex: 1;\r\n  }\r\n`;\r\n\r\nconst NavItem = styled(Link)`\r\n  display: flex;\r\n  /* width: 150px; */\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 0 1em;\r\n  transition: 0.3s background-color;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    background-color: #e75480;\r\n  }\r\n\r\n  color: black;\r\n  text-decoration: none;\r\n  font-weight: ${({ selected }) => (selected ? \"bold\" : \"normal\")};\r\n\r\n  &:visited,\r\n  &:active,\r\n  &:hover {\r\n    color: black;\r\n  }\r\n`;\r\n\r\nconst Navbar = () => {\r\n  const { pathname } = useLocation();\r\n\r\n  return (\r\n    <Container>\r\n      <NavItem selected={pathname === \"/\"} to=\"/\">\r\n        Home\r\n      </NavItem>\r\n      <NavItem selected={pathname === \"/levels\"} to=\"/levels\">\r\n        Levels of Doneness\r\n      </NavItem>\r\n      <NavItem selected={pathname === \"/palm\"} to=\"/palm\">\r\n        The Palm Test\r\n      </NavItem>\r\n      <NavItem selected={pathname === \"/face\"} to=\"/face\">\r\n        The Face Test\r\n      </NavItem>\r\n      <NavItem selected={pathname === \"/fist\"} to=\"/fist\">\r\n        The Fist Test\r\n      </NavItem>\r\n      <div className=\"spacer\"></div>\r\n      <NavItem selected={pathname === \"/cheat-sheet\"} to=\"/cheat-sheet\">\r\n        Cheat Sheet\r\n      </NavItem>\r\n      <NavItem selected={pathname.startsWith(\"/quiz\")} to=\"/quiz/start\">\r\n        Quiz\r\n      </NavItem>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import styled from \"styled-components\"\r\n// import { breakpoint } from \"../helper\";\r\n\r\nexport default styled.div`\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: ${({ center }) => (center ? \"center\" : \"start\")};\r\n\r\n  /* margin: 0 auto; */\r\n  width: 800px;\r\n`","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport Container from \"./Container.layout\";\r\n\r\nconst TitleSection = styled.div`\r\n  width: 100%;\r\n  padding: 3em 2em 3em 2em;\r\n  box-sizing: border-box;\r\n  background-color: salmon;\r\n  display: flex;\r\n  justify-content: center;\r\n\r\n  h1 {\r\n    font-size: 4em;\r\n    margin-bottom: 0;\r\n  }\r\n  p {\r\n    font-size: 1.1em;\r\n  }\r\n`;\r\n\r\nexport default ({ children, ...otherProps }) => (\r\n  <TitleSection {...otherProps}>\r\n    <Container center>{children} </Container>\r\n  </TitleSection>\r\n);\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { breakpoint } from \"../helper\";\r\n\r\nimport Container from \"./Container.layout\";\r\n\r\nconst Section = styled.div`\r\n  width: 100%;\r\n  padding: 2em 2em 1em 2em;\r\n  box-sizing: border-box;\r\n  background-color: lightgoldenrodyellow;\r\n  display: flex;\r\n  justify-content: center;\r\n\r\n  h2 {\r\n    font-size: 2em;\r\n    margin-bottom: 1em;\r\n  }\r\n  p {\r\n    font-size: 1em;\r\n  }\r\n\r\n  .flex-v {\r\n    display: flex;\r\n    flex-direction: column;\r\n  }\r\n\r\n  .spacer {\r\n    flex: 1;\r\n  }\r\n\r\n  .flex-h {\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: center;\r\n    width: 100%;\r\n\r\n    ${breakpoint.down(\"m\")`\r\n      flex-direction: column;\r\n    `}\r\n\r\n    .image {\r\n      margin-right: 1em;\r\n      margin-bottom: 1em;\r\n      ${breakpoint.down(\"m\")`\r\n        width: 100%;\r\n      `}\r\n    }\r\n    .text {\r\n      text-align: justify;\r\n      ${breakpoint.down(\"m\")`\r\n        width: 100%;\r\n      `}\r\n    }\r\n  }\r\n`;\r\n\r\nexport default ({ children, center, ...otherProps }) => (\r\n  <Section {...otherProps}>\r\n    <Container center={center}>{children} </Container>\r\n  </Section>\r\n);\r\n","import styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// https://fdossena.com/?p=html5cool/buttons/i.frag\r\n\r\nexport const ButtonLink = styled(Link)`\r\n  display: inline-block;\r\n  padding: 0.7em 1.4em;\r\n  margin: 0.2em 1em;\r\n  border-radius: 0.15em;\r\n  box-sizing: border-box;\r\n  text-decoration: none;\r\n  text-transform: uppercase;\r\n  font-weight: bold;\r\n  color: #ffffff;\r\n  background-color: ${({ type }) => {\r\n    switch (type) {\r\n      case \"cancel\":\r\n        return \"#668fff\";\r\n      default:\r\n        return \"#3369ff\";\r\n    }\r\n  }};\r\n  cursor: ${({ disabled }) => (disabled ? \"no-drop\" : \"pointer\")};\r\n  box-shadow: inset 0 -0.6em 0 -0.35em rgba(0, 0, 0, 0.17);\r\n  text-align: center;\r\n  position: relative;\r\n\r\n  &:active {\r\n    top: 0.1em;\r\n  }\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  display: inline-block;\r\n  padding: ${({ icon }) => (icon ? \"0.7em\" : \"0.7em 1.4em\")};\r\n  margin: 0.2em 1em;\r\n  border-radius: 0.15em;\r\n  box-sizing: border-box;\r\n  font-family: \"Ubuntu\", sans-serif;\r\n  font-size: 1em;\r\n  text-decoration: none;\r\n  text-transform: uppercase;\r\n  font-weight: bold;\r\n  color: #ffffff;\r\n  background-color: ${({ type }) => {\r\n    switch (type) {\r\n      case \"cancel\":\r\n        return \"#668fff\";\r\n      case \"choice\":\r\n        return \"#668fff\";\r\n      case \"disabled\":\r\n        return \"gray\";\r\n      case \"success\":\r\n        return \"green\";\r\n      case \"failure\":\r\n        return \"red\";\r\n      default:\r\n        return \"#3369ff\";\r\n    }\r\n  }};\r\n  border: none;\r\n  cursor: ${({ disabled }) => (disabled ? \"no-drop\" : \"pointer\")};\r\n  box-shadow: inset 0 -0.6em 0 -0.35em rgba(0, 0, 0, 0.17);\r\n  text-align: center;\r\n  position: relative;\r\n\r\n  &:active {\r\n    top: 0.1em;\r\n  }\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n  &:hover {\r\n    background-color: ${({ disabled, success, failure }) =>\r\n      disabled || success || failure ? \"none\" : \"#3369ff\"};\r\n  }\r\n`;\r\n","import React, { Fragment } from \"react\";\r\n\r\nimport TitleSection from \"../../components/TitleSection.component\";\r\nimport Section from \"../../components/Section.component\";\r\nimport { ButtonLink } from \"../../components/Button.component\";\r\n\r\nconst Home = () => {\r\n  return (\r\n    <Fragment>\r\n      <TitleSection>\r\n        <h1>How to Cook Steak Right</h1>\r\n        <p>\r\n          Learn how to cook a cut of steak at different levels of doneness using\r\n          only your body.\r\n        </p>\r\n      </TitleSection>\r\n      <Section center>\r\n        <h2>What?</h2>\r\n        <ButtonLink to=\"/levels\">The 4 Levels of Doneness</ButtonLink>\r\n      </Section>\r\n      <Section center>\r\n        <h2>How?</h2>\r\n        <div className=\"flex-h\">\r\n          <ButtonLink to=\"/palm\">The Palm Test</ButtonLink>\r\n          <ButtonLink to=\"/face\">The Face Test</ButtonLink>\r\n          <ButtonLink to=\"/fist\">The Fist Test</ButtonLink>\r\n        </div>\r\n      </Section>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import styled from \"styled-components\";\r\n\r\nconst TwoColumnLayout = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  width: 100%;\r\n`;\r\n\r\nconst Left = styled.div`\r\n  box-sizing: border-box;\r\n  ${({ width }) => (width ? `width: ${width}%` : null)};\r\n  ${({ minWidth }) => (minWidth ? `min-width: ${minWidth}px` : null)};\r\n`;\r\n\r\nconst Right = styled.div`\r\n  box-sizing: border-box;\r\n  ${({ width }) => (width ? `width: ${width}%` : null)};\r\n  ${({ minWidth }) => (minWidth ? `min-width: ${minWidth}px` : null)};\r\n`;\r\n\r\nTwoColumnLayout.Left = Left;\r\nTwoColumnLayout.Right = Right;\r\n\r\nexport default TwoColumnLayout;\r\n","import styled from \"styled-components\";\r\n\r\nexport default styled.img`\r\n  width: 100%;\r\n  object-fit: cover !important; // or whatever\r\n  object-position: 0% 0% !important; // or whatever\r\n  font-family: \"object-fit: cover !important; object-position: 0% 0% !important;\"; // needed for IE9+ polyfill\r\n`;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\n// https://nehalist.io/creating-a-reading-progress-bar-in-react/\r\n\r\nconst Bar = styled.div.attrs(({ height }) => ({\r\n  style: { height: `${height}%` },\r\n}))`\r\n  transition: 0.1s height;\r\n  background-color: red;\r\n`;\r\n\r\nconst ReadingProgress = () => {\r\n  const [readingProgress, setReadingProgress] = useState(0);\r\n  const scrollListener = () => {\r\n    if (!document.body) {\r\n      return;\r\n    }\r\n\r\n    const element = document.body;\r\n    const totalHeight =\r\n      element.clientHeight - element.offsetTop - window.innerHeight;\r\n    const windowScrollTop =\r\n      window.pageYOffset ||\r\n      document.documentElement.scrollTop ||\r\n      document.body.scrollTop ||\r\n      0;\r\n\r\n    if (windowScrollTop === 0) {\r\n      return setReadingProgress(0);\r\n    }\r\n\r\n    if (windowScrollTop > totalHeight) {\r\n      return setReadingProgress(100);\r\n    }\r\n\r\n    setReadingProgress((windowScrollTop / totalHeight) * 100);\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", scrollListener);\r\n    return () => window.removeEventListener(\"scroll\", scrollListener);\r\n  });\r\n\r\n  return <Bar height={readingProgress} />;\r\n};\r\n\r\nexport default ReadingProgress;\r\n","import styled from \"styled-components\";\r\nimport { StickyContainer } from \"react-sticky\";\r\nimport { Link as ScrollLink } from \"react-scroll\";\r\n\r\nexport const StyledStickyContainer = styled(StickyContainer)`\r\n  height: 100%;\r\n\r\n  a.active {\r\n    color: black;\r\n    font-weight: bold;\r\n  }\r\n\r\n  .vertical-container {\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: start;\r\n    background: lightsteelblue;\r\n    top: 50px !important;\r\n\r\n    .info {\r\n      display: flex;\r\n      flex-direction: row;\r\n\r\n      .scroll {\r\n        width: 10px;\r\n        background-color: lightcyan;\r\n      }\r\n      .headers {\r\n        display: flex;\r\n        flex: 1;\r\n        flex-direction: column;\r\n\r\n        .item {\r\n          height: 50px;\r\n          padding: 20px 0 20px 1em;\r\n          display: flex;\r\n          align-items: center;\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ScrollNavLink = styled(ScrollLink)`\r\n  font-size: 1.2em;\r\n  cursor: pointer;\r\n  color: gray;\r\n`;\r\n\r\nexport const ScrollToTopButton = styled.button`\r\n  display: inline-block;\r\n  vertical-align: middle;\r\n  position: fixed;\r\n  bottom: 20px;\r\n  right: 20px;\r\n\r\n  outline: none;\r\n  padding: 1em 1em;\r\n  margin: 1em 1em;\r\n  height: 60px;\r\n  width: 60px;\r\n  border: none;\r\n  border-radius: 100px;\r\n  box-sizing: border-box;\r\n  color: #ffffff;\r\n  background-color: #3369ff;\r\n  cursor: pointer;\r\n  box-shadow: inset 0 -0.6em 0 -0.35em rgba(0, 0, 0, 0.17);\r\n\r\n  &:active {\r\n    bottom: calc(20px - 0.1em);\r\n  }\r\n\r\n  svg {\r\n    display: inline-block;\r\n    vertical-align: middle;\r\n    width: 20px;\r\n    height: 20px;\r\n  }\r\n`;\r\n","import React, { useEffect } from \"react\";\r\nimport { useLocation, useHistory } from \"react-router-dom\";\r\nimport { IoIosArrowUp } from \"react-icons/io\";\r\nimport { Sticky } from \"react-sticky\";\r\nimport { Events, animateScroll as scroll, scrollSpy } from \"react-scroll\";\r\n\r\nimport { scrollToTop } from \"../helper\";\r\nimport ReadingProgress from \"./ReadingProgress.component\";\r\nimport {\r\n  StyledStickyContainer,\r\n  ScrollNavLink,\r\n  ScrollToTopButton,\r\n} from \"./ScrollStyled.component\";\r\n\r\nconst Scrollbar = ({ sections }) => {\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n  scrollToTop()\r\n\r\n  useEffect(() => {\r\n    Events.scrollEvent.register(\"begin\", function () {\r\n      // console.log(\"begin\", arguments);\r\n    });\r\n\r\n    Events.scrollEvent.register(\"end\", function () {\r\n      // console.log(\"end\", arguments);\r\n    });\r\n\r\n    scrollSpy.update();\r\n\r\n    return () => {\r\n      Events.scrollEvent.remove(\"begin\");\r\n      Events.scrollEvent.remove(\"end\");\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <StyledStickyContainer>\r\n      <Sticky topOffset={-50}>\r\n        {({ style }) => (\r\n          <div className=\"vertical-container\" style={style}>\r\n            <div className=\"info\">\r\n              <div className=\"scroll\">\r\n                <ReadingProgress />\r\n              </div>\r\n              <div className=\"headers\">\r\n                {sections.map(({ id, name }, i) => (\r\n                  <ScrollNavLink\r\n                    key={i}\r\n                    to={id}\r\n                    className=\"item\"\r\n                    activeClass=\"active\"\r\n                    spy={true}\r\n                    hashSpy={true}\r\n                    smooth={true}\r\n                    duration={500}\r\n                    offset={-50}\r\n                  >\r\n                    {name}\r\n                  </ScrollNavLink>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </Sticky>\r\n      <ScrollToTopButton\r\n        onClick={() => {\r\n          scroll.scrollToTop();\r\n          history.push({ pathname: location.pathname });\r\n        }}\r\n      >\r\n        <IoIosArrowUp size=\"3em\" />\r\n      </ScrollToTopButton>\r\n    </StyledStickyContainer>\r\n  );\r\n};\r\n\r\nexport default Scrollbar;\r\n","import React, { Fragment, useRef, useState, useEffect } from \"react\";\r\nimport { calculateAdditionalHeight } from \"../helper\";\r\n\r\nimport TwoCol from \"../components/TwoColumn.layout\";\r\nimport TitleSection from \"../components/TitleSection.component\";\r\nimport Section from \"../components/Section.component\";\r\nimport Image from \"../components/Image.component\";\r\nimport Scrollbar from \"../components/Scrollbar.component\";\r\n\r\nconst ScrollingPageTemplate = ({\r\n  title,\r\n  subtitle,\r\n  sections,\r\n  bottomButtons,\r\n}) => {\r\n  const lastAnchorRef = useRef(null);\r\n  const [additionalHeight, setAdditionalHeight] = useState(0); // so that last anchor can get scrolled to\r\n\r\n  useEffect(() => {\r\n    setAdditionalHeight(calculateAdditionalHeight(lastAnchorRef));\r\n  }, [lastAnchorRef]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <TitleSection>\r\n        <h1>{title}</h1>\r\n        <p>{subtitle}</p>\r\n      </TitleSection>\r\n      <TwoCol>\r\n        <TwoCol.Left width={80}>\r\n          <Fragment>\r\n            {sections &&\r\n              sections.map(({ id, name, img, img2, text }, i) => (\r\n                <div\r\n                  key={i}\r\n                  id={id}\r\n                  ref={i === sections.length - 1 ? lastAnchorRef : null}\r\n                >\r\n                  <Section>\r\n                    <h2>{name}</h2>\r\n                    <div className=\"flex-h\">\r\n                      {img && img2 && !text && (\r\n                        <Fragment>\r\n                          <div className=\"image\" style={{ width: \"50%\" }}>\r\n                            <Image src={img} />\r\n                          </div>\r\n                          <div className=\"image\" style={{ width: \"50%\" }}>\r\n                            <Image src={img} />\r\n                          </div>\r\n                        </Fragment>\r\n                      )}\r\n                      {img && !img2 && text && (\r\n                        <Fragment>\r\n                          <div className=\"image\" style={{ width: \"65%\" }}>\r\n                            <Image src={img} />\r\n                          </div>\r\n                          <div className=\"text\" style={{ width: \"35%\" }}>\r\n                            {text}\r\n                          </div>\r\n                        </Fragment>\r\n                      )}\r\n                      {!img && !img2 && text && (\r\n                        <div className=\"text\">{text}</div>\r\n                      )}\r\n                    </div>\r\n                  </Section>\r\n                </div>\r\n              ))}\r\n          </Fragment>\r\n        </TwoCol.Left>\r\n        <TwoCol.Right minWidth={100} width={20}>\r\n          {sections && <Scrollbar sections={sections} />}\r\n        </TwoCol.Right>\r\n      </TwoCol>\r\n      <div className=\"spacer\" style={{ height: additionalHeight }}></div>\r\n      {bottomButtons}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ScrollingPageTemplate;\r\n","import React, { Fragment } from \"react\";\r\nimport { lorem } from \"../../helper\";\r\n\r\nimport ScrollingPageTemplate from \"../ScrollingPageTemplate\";\r\nimport Section from \"../../components/Section.component\";\r\nimport {ButtonLink} from \"../../components/Button.component\";\r\n\r\nconst levels = [\r\n  {\r\n    id: \"rare\",\r\n    name: \"Rare\",\r\n    img: \"https://dummyimage.com/400x300/757575/ffffff\",\r\n    text: lorem.generateSentences(3),\r\n  },\r\n  {\r\n    id: \"medium-rare\",\r\n    name: \"Medium-Rare\",\r\n    img: \"https://dummyimage.com/400x300/757575/ffffff\",\r\n    text: lorem.generateSentences(3),\r\n  },\r\n  {\r\n    id: \"medium\",\r\n    name: \"Medium\",\r\n    img: \"https://dummyimage.com/400x300/757575/ffffff\",\r\n    text: lorem.generateSentences(3),\r\n  },\r\n  {\r\n    id: \"well-done\",\r\n    name: \"Well-Done\",\r\n    img: \"https://dummyimage.com/400x300/757575/ffffff\",\r\n    text: lorem.generateSentences(3),\r\n  },\r\n];\r\n\r\nconst Levels = () => (\r\n  <Fragment>\r\n    <ScrollingPageTemplate\r\n      title={\"The 4 Levels of Doneness\"}\r\n      subtitle={\"Which one do you prefer?\"}\r\n      sections={levels}\r\n      bottomButtons={\r\n        <Section center>\r\n          <h2>Next, learn how to test doneness.</h2>\r\n          <div className=\"flex-h\">\r\n            <ButtonLink to=\"/palm\">The Palm Test</ButtonLink>\r\n            <ButtonLink to=\"/face\">The Face Test</ButtonLink>\r\n            <ButtonLink to=\"/fist\">The Fist Test</ButtonLink>\r\n          </div>\r\n        </Section>\r\n      }\r\n    />\r\n  </Fragment>\r\n);\r\n\r\nexport default Levels;\r\n","import React from \"react\";\r\nimport { lorem } from \"../../helper\";\r\n\r\nimport ScrollingPageTemplate from \"../ScrollingPageTemplate\";\r\nimport Section from \"../../components/Section.component\";\r\nimport {ButtonLink} from \"../../components/Button.component\";\r\n\r\nconst tests = [\r\n  {\r\n    id: \"what\",\r\n    name: \"What?\",\r\n    text: lorem.generateSentences(5),\r\n  },\r\n  {\r\n    id: \"rare\",\r\n    name: \"Rare\",\r\n    img: \"https://dummyimage.com/400x300/757575/ffffff\",\r\n    img2: \"https://dummyimage.com/400x300/757575/ffffff\",\r\n  },\r\n  {\r\n    id: \"medium-rare\",\r\n    name: \"Medium-Rare\",\r\n    img: \"https://dummyimage.com/400x300/757575/ffffff\",\r\n    img2: \"https://dummyimage.com/400x300/757575/ffffff\",\r\n  },\r\n  {\r\n    id: \"medium\",\r\n    name: \"Medium\",\r\n    img: \"https://dummyimage.com/400x300/757575/ffffff\",\r\n    img2: \"https://dummyimage.com/400x300/757575/ffffff\",\r\n  },\r\n  {\r\n    id: \"well-done\",\r\n    name: \"Well-Done\",\r\n    img: \"https://dummyimage.com/400x300/757575/ffffff\",\r\n    img2: \"https://dummyimage.com/400x300/757575/ffffff\",\r\n  },\r\n];\r\n\r\nconst Palm = () => (\r\n  <ScrollingPageTemplate\r\n    title={\"The Palm Test\"}\r\n    subtitle={\"Testing doneness in the power of your palm.\"}\r\n    sections={tests}\r\n    bottomButtons={\r\n      <Section center>\r\n        <h2>One down, two to go.</h2>\r\n        <div className=\"flex-h\">\r\n          <ButtonLink to=\"/face\">The Face Test</ButtonLink>\r\n          <ButtonLink to=\"/fist\">The Fist Test</ButtonLink>\r\n        </div>\r\n      </Section>\r\n    }\r\n  />\r\n);\r\n\r\n// <small style={{ color: \"salmon\" , fontSize: \"0.01em\"}}>\r\n// If your palm is bigger than your face, you might have cancer.\r\n// </small>\r\n\r\nexport default Palm;\r\n","import React from \"react\";\r\nimport { lorem } from \"../../helper\";\r\n\r\nimport ScrollingPageTemplate from \"../ScrollingPageTemplate\";\r\nimport Section from \"../../components/Section.component\";\r\nimport {ButtonLink} from \"../../components/Button.component\";\r\n\r\nconst tests = [\r\n  {\r\n    id: \"what\",\r\n    name: \"What?\",\r\n    text: lorem.generateSentences(5),\r\n  },\r\n  {\r\n    id: \"rare\",\r\n    name: \"Rare\",\r\n    img: \"https://dummyimage.com/400x300/757575/ffffff\",\r\n    img2: \"https://dummyimage.com/400x300/757575/ffffff\",\r\n  },\r\n  {\r\n    id: \"medium-rare\",\r\n    name: \"Medium-Rare\",\r\n    img: \"https://dummyimage.com/400x300/757575/ffffff\",\r\n    img2: \"https://dummyimage.com/400x300/757575/ffffff\",\r\n  },\r\n  {\r\n    id: \"medium\",\r\n    name: \"Medium\",\r\n    img: \"https://dummyimage.com/400x300/757575/ffffff\",\r\n    img2: \"https://dummyimage.com/400x300/757575/ffffff\",\r\n  },\r\n  {\r\n    id: \"well-done\",\r\n    name: \"Well-Done\",\r\n    img: \"https://dummyimage.com/400x300/757575/ffffff\",\r\n    img2: \"https://dummyimage.com/400x300/757575/ffffff\",\r\n  },\r\n];\r\n\r\nconst Face = () => (\r\n  <ScrollingPageTemplate\r\n    title={\"The Face Test\"}\r\n    subtitle={\"Time to face the consequences of your cooking.\"}\r\n    sections={tests}\r\n    bottomButtons={\r\n      <Section center>\r\n        <h2>Last, but not least.</h2>\r\n        <div className=\"flex-h\">\r\n          <ButtonLink to=\"/fist\">The Fist Test</ButtonLink>\r\n        </div>\r\n      </Section>\r\n    }\r\n  />\r\n);\r\n\r\nexport default Face;\r\n","import React from \"react\";\r\nimport { lorem } from \"../../helper\";\r\n\r\nimport ScrollingPageTemplate from \"../ScrollingPageTemplate\";\r\nimport Section from \"../../components/Section.component\";\r\nimport {ButtonLink} from \"../../components/Button.component\";\r\n\r\nconst tests = [\r\n  {\r\n    id: \"what\",\r\n    name: \"What?\",\r\n    text: lorem.generateSentences(5),\r\n  },\r\n  {\r\n    id: \"rare\",\r\n    name: \"Rare\",\r\n    img: \"https://dummyimage.com/400x300/757575/ffffff\",\r\n    img2: \"https://dummyimage.com/400x300/757575/ffffff\",\r\n  },\r\n  {\r\n    id: \"medium-rare\",\r\n    name: \"Medium-Rare\",\r\n    img: \"https://dummyimage.com/400x300/757575/ffffff\",\r\n    img2: \"https://dummyimage.com/400x300/757575/ffffff\",\r\n  },\r\n  {\r\n    id: \"medium\",\r\n    name: \"Medium\",\r\n    img: \"https://dummyimage.com/400x300/757575/ffffff\",\r\n    img2: \"https://dummyimage.com/400x300/757575/ffffff\",\r\n  },\r\n  {\r\n    id: \"well-done\",\r\n    name: \"Well-Done\",\r\n    img: \"https://dummyimage.com/400x300/757575/ffffff\",\r\n    img2: \"https://dummyimage.com/400x300/757575/ffffff\",\r\n  },\r\n];\r\n\r\nconst Fist = () => (\r\n  <ScrollingPageTemplate\r\n    title={\"The Fist Test\"}\r\n    subtitle={\"No, you don't punch your steak.\"}\r\n    sections={tests}\r\n    bottomButtons={\r\n      <Section center>\r\n        <h2>Think you got what it takes?</h2>\r\n        <div className=\"flex-h\">\r\n          <ButtonLink to=\"/cheat-sheet\">Cheat Sheet</ButtonLink>\r\n          <ButtonLink to=\"/quiz/start\">Quiz Yourself</ButtonLink>\r\n        </div>\r\n      </Section>\r\n    }\r\n  />\r\n);\r\n\r\nexport default Fist;\r\n","import React, {Fragment} from \"react\";\r\n\r\nimport TitleSection from \"../../components/TitleSection.component\";\r\n\r\nconst CheatSheet = () => {\r\n  return (\r\n    <Fragment>\r\n      <TitleSection>\r\n        <h1>Cheat Sheet</h1>\r\n        <p></p>\r\n      </TitleSection>\r\n      {/* <Section>\r\n        <h2>What?</h2>\r\n        <Button to=\"/levels\">The 4 Levels of Doneness</Button>\r\n      </Section> */}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default CheatSheet;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nimport Slider from \"rc-slider\";\r\nimport \"rc-slider/assets/index.css\";\r\nimport \"rc-tooltip/assets/bootstrap.css\";\r\n\r\nimport { Button } from \"../../components/Button.component\";\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n\r\n  .setup {\r\n  }\r\n  .prompt {\r\n    font-weight: bold;\r\n    margin: 2em auto 1em auto;\r\n  }\r\n  .input {\r\n    margin: 0em 2em 7em 2em;\r\n    box-sizing: border-box;\r\n    padding: 1em;\r\n    height: 3em;\r\n\r\n    .value {\r\n      text-align: center;\r\n      margin-bottom: 2em;\r\n      color: black;\r\n\r\n      span.bold {\r\n        font-size: 2em;\r\n        font-weight: bold;\r\n        color: black;\r\n      }\r\n    }\r\n\r\n    .wrapper {\r\n      box-sizing: border-box;\r\n      margin: 0 auto;\r\n      height: 10px;\r\n\r\n      .rc-slider {\r\n        width: 100%;\r\n        height: 10px !important;\r\n      }\r\n\r\n      .rc-slider-rail {\r\n        background-color: #e9e9e9;\r\n        height: 10px !important;\r\n        border-radius: 6px;\r\n      }\r\n\r\n      .rc-slider-track {\r\n        height: 10px !important;\r\n        border-radius: 6px;\r\n        background-color: #abe2fb;\r\n      }\r\n\r\n      .rc-slider-disabled {\r\n        background-color: transparent;\r\n      }\r\n\r\n      .rc-slider-step {\r\n        height: 10px;\r\n      }\r\n\r\n      .rc-slider-dot {\r\n        position: absolute;\r\n        bottom: -3px;\r\n        margin-left: -5px;\r\n        width: 16px;\r\n        height: 16px;\r\n        border: 2px solid #e9e9e9;\r\n        background-color: #fff;\r\n      }\r\n\r\n      .rc-slider-dot-active {\r\n        border-color: #96dbfa;\r\n        /* background-color: #96dbfa; */\r\n      }\r\n\r\n      .rc-slider-handle {\r\n        width: 22px;\r\n        height: 22px;\r\n        margin-top: -6px;\r\n        border: solid 4px #96dbfa;\r\n        background-color: #fff;\r\n      }\r\n\r\n      .rc-slider-mark {\r\n        top: 30px;\r\n        font-size: 1em;\r\n      }\r\n\r\n      .rc-slider-mark-text {\r\n        color: #999;\r\n        width: 50px;\r\n        overflow: visible;\r\n      }\r\n\r\n      .rc-slider-mark-text-active {\r\n        color: #000;\r\n      }\r\n    }\r\n  }\r\n\r\n  .buttons,\r\n  .feedback {\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    margin: 1em 0;\r\n  }\r\n`;\r\n\r\nexport default ({ qInfo, hasSubmitted, handleSubmit, isCorrect }) => {\r\n  const { scenario, part } = useParams();\r\n  const { setup, prompt, suffix } = qInfo;\r\n  const [value, setValue] = useState(0);\r\n  const marks = [...Array(11).keys()].reduce(\r\n    (obj, k) => ({ ...obj, [k]: k }),\r\n    {}\r\n  );\r\n  // marks[0] = `0 ${suffix}`;\r\n\r\n  useEffect(() => {\r\n    // Check localstorage to see if q has already been submitted, if so populate value\r\n    const cachedData = JSON.parse(localStorage.getItem(`s${scenario}p${part}`));\r\n    if (!cachedData) return\r\n    setValue(cachedData.selectedVal);\r\n  }, [scenario, part]);\r\n\r\n  const handleChange = (v) => {\r\n    setValue(v);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <div className=\"setup\">{setup}</div>\r\n      <div className=\"prompt\">{prompt}</div>\r\n      <div className=\"input\">\r\n        <div className=\"value\">\r\n          <span className=\"bold\">{value}</span> {suffix}\r\n        </div>\r\n        <div className=\"wrapper\">\r\n          <Slider\r\n            min={0}\r\n            max={10}\r\n            defaultValue={0}\r\n            value={value}\r\n            marks={marks}\r\n            step={0.5}\r\n            disabled={hasSubmitted}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n      </div>\r\n      {!hasSubmitted && (\r\n        <div className=\"buttons\">\r\n          <Button\r\n            onClick={(e) => {\r\n              e.preventDefault();\r\n              handleSubmit(value);\r\n            }}\r\n          >\r\n            Submit\r\n          </Button>\r\n        </div>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n","import React, { Fragment, useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport ReactTooltip from \"react-tooltip\";\r\n\r\nimport facepng from \"../media/face.png\";\r\n\r\nimport palmpng from \"../media/palm.png\";\r\nimport palmrare from \"../media/palm-rare.png\";\r\nimport palmmediumrare from \"../media/palm-medium-rare.png\";\r\nimport palmmedium from \"../media/palm-medium.png\";\r\nimport palmwelldone from \"../media/palm-well-done.png\";\r\n\r\nconst ImageWrapper = styled.div`\r\n  /* position: absolute; */\r\n  margin: 0 auto;\r\n  width: 300px;\r\n  height: ${({ height }) => height}px;\r\n  border: 4px solid gray;\r\n  background-color: white;\r\n  background-size: 300px 300px;\r\n  background-repeat: no-repeat;\r\n  background-position: bottom;\r\n  /* background-attachment: fixed; */\r\n  z-index: 1;\r\n\r\n  background-image: url(${({ src }) => src});\r\n\r\n  .tooltip {\r\n    opacity: 1 !important;\r\n    padding: 0.5em;\r\n    img {\r\n      width: 200px;\r\n      height: 200px;\r\n      overflow: hidden;\r\n    }\r\n  }\r\n`;\r\n\r\nconst HoverArea = styled.div`\r\n  position: relative;\r\n  border-radius: 100%;\r\n  background-color: ${({ selected }) => (selected ? \"blue\" : \"lightblue\")};\r\n  z-index: 1;\r\n  width: 20px;\r\n  height: 20px;\r\n\r\n  top: ${({ pos: { top } }) => top}px;\r\n  left: ${({ pos: { left } }) => left}px;\r\n  cursor: ${({ disabled }) => (disabled ? \"auto\" : \"pointer\")};\r\n\r\n  transform: scale(${({ selected }) => (selected ? 1.2 : 1.0)});\r\n\r\n  ${({ disabled }) => {\r\n    if (disabled) {\r\n      return null;\r\n    }\r\n    return `\r\n      &:hover {\r\n          transform: scale(1.2);\r\n          background-color: blue;\r\n        }\r\n    `;\r\n  }}\r\n`;\r\n\r\nconst fingerComponentData = [\r\n  {\r\n    id: \"PINKY\",\r\n    pos: { top: 80, left: 42 },\r\n    tooltip: <img src={palmwelldone} alt={\"PINKY\"}></img>,\r\n  },\r\n  {\r\n    id: \"RING\",\r\n    pos: { top: 20, left: 85 },\r\n    tooltip: <img src={palmmedium} alt={\"RING\"}></img>,\r\n  },\r\n  {\r\n    id: \"MIDDLE\",\r\n    pos: { top: -13, left: 135 },\r\n    tooltip: <img src={palmmediumrare} alt={\"MIDDLE\"}></img>,\r\n  },\r\n  {\r\n    id: \"INDEX\",\r\n    pos: { top: -21, left: 181 },\r\n    tooltip: <img src={palmrare} alt={\"INDEX\"}></img>,\r\n  },\r\n];\r\n\r\nconst faceComponentData = [\r\n  {\r\n    id: \"CHEEK\",\r\n    pos: { top: 190, left: 80 },\r\n    tooltip: \"Cheek\",\r\n  },\r\n  {\r\n    id: \"CHIN\",\r\n    pos: { top: 240, left: 140 },\r\n    tooltip: \"Chin\",\r\n  },\r\n  {\r\n    id: \"NOSE\",\r\n    pos: { top: 135, left: 140 },\r\n    tooltip: \"Nose\",\r\n  },\r\n  {\r\n    id: \"FOREHEAD\",\r\n    pos: { top: 0, left: 140 },\r\n    tooltip: \"Forehead\",\r\n  },\r\n];\r\n\r\nconst BaseHover = ({\r\n  basepng,\r\n  data,\r\n  hasSubmitted,\r\n  handleSubmit,\r\n  isCorrect,\r\n  height,\r\n}) => {\r\n  const { scenario, part } = useParams();\r\n  const [value, setValue] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Check localstorage to see if q has already been submitted, if so populate value\r\n    const cachedData = JSON.parse(localStorage.getItem(`s${scenario}p${part}`));\r\n    if (!cachedData) return;\r\n    setValue(cachedData.selectedVal);\r\n  }, [scenario, part]);\r\n\r\n  return (\r\n    <ImageWrapper src={basepng} height={height}>\r\n      {data &&\r\n        data.map(({ id, pos, tooltip }, i) => (\r\n          <Fragment key={i}>\r\n            <HoverArea\r\n              data-tip\r\n              data-for={id}\r\n              pos={pos}\r\n              disabled={hasSubmitted}\r\n              selected={id === value}\r\n              onClick={(e) => {\r\n                e.preventDefault();\r\n                if (hasSubmitted) {\r\n                  return;\r\n                }\r\n                setValue(id);\r\n                handleSubmit(id);\r\n              }}\r\n            />\r\n            <ReactTooltip className=\"tooltip\" id={id}>\r\n              {tooltip}\r\n            </ReactTooltip>\r\n          </Fragment>\r\n        ))}\r\n    </ImageWrapper>\r\n  );\r\n};\r\n\r\nexport const Palm = (p) => (\r\n  <BaseHover basepng={palmpng} data={fingerComponentData} {...p} height={340} />\r\n);\r\n\r\nexport const Face = (p) => (\r\n  <BaseHover basepng={facepng} data={faceComponentData} {...p} height={300} />\r\n);\r\n","import React, { Fragment, useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { Button } from \"../../components/Button.component\";\r\nimport { Palm, Face } from \"../../components/HoverMedia.component\";\r\nimport fistpng from \"../../media/fist.png\";\r\nimport { TactileTypes, FistTypes } from \"./questions\";\r\nimport { handleButtonColor } from \"../../helper\";\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n\r\n  .setup {\r\n  }\r\n  .prompt {\r\n    font-weight: bold;\r\n    margin: 2em auto 1em auto;\r\n  }\r\n  .input {\r\n    margin-top: 2em;\r\n    box-sizing: border-box;\r\n\r\n    .value {\r\n      text-align: center;\r\n      margin-bottom: 2em;\r\n      color: black;\r\n\r\n      span.bold {\r\n        font-size: 2em;\r\n        font-weight: bold;\r\n        color: black;\r\n      }\r\n    }\r\n\r\n    .wrapper {\r\n      box-sizing: border-box;\r\n      margin: 0 auto 2em auto;\r\n      display: flex;\r\n      justify-content: center;\r\n\r\n      img {\r\n        height: 250px;\r\n        border: 4px solid gray;\r\n      }\r\n      /* height: 400px; */\r\n    }\r\n    .choices {\r\n      width: 100%;\r\n      display: flex;\r\n      justify-content: center;\r\n      margin: 1em 0 2em 0;\r\n    }\r\n  }\r\n\r\n  .buttons,\r\n  .feedback {\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    margin: 1em 0;\r\n  }\r\n`;\r\n\r\nexport default ({ qInfo, hasSubmitted, handleSubmit, isCorrect }) => {\r\n  const { scenario, part } = useParams();\r\n  const { setup, prompt, media } = qInfo;\r\n  const [fistValue, setFistValue] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // For fist value only\r\n    // Check localstorage to see if q has already been submitted, if so populate value\r\n    if (media !== TactileTypes.FIST) {\r\n      return;\r\n    }\r\n    const cachedData = JSON.parse(localStorage.getItem(`s${scenario}p${part}`));\r\n    if (!cachedData) return\r\n    setFistValue(cachedData.selectedVal);\r\n  }, [scenario, part, media]);\r\n\r\n  const renderType = () => {\r\n    if (media === TactileTypes.PALM) {\r\n      return (\r\n        <div className=\"wrapper\">\r\n          <Palm\r\n            hasSubmitted={hasSubmitted}\r\n            handleSubmit={handleSubmit}\r\n            isCorrect={isCorrect}\r\n          />\r\n        </div>\r\n      );\r\n    } else if (media === TactileTypes.FACE) {\r\n      return (\r\n        <div className=\"wrapper\">\r\n          <Face\r\n            hasSubmitted={hasSubmitted}\r\n            handleSubmit={handleSubmit}\r\n            isCorrect={isCorrect}\r\n          />\r\n        </div>\r\n      );\r\n    } else if (media === TactileTypes.FIST) {\r\n      return (\r\n        <Fragment>\r\n          <div className=\"wrapper\">\r\n            <img src={fistpng} alt=\"fist\"></img>\r\n          </div>\r\n          <div className=\"choices\">\r\n            {Object.keys(FistTypes).map((fist, i) => (\r\n              <Button\r\n                onClick={(e) => {\r\n                  e.preventDefault();\r\n                  if (hasSubmitted) {\r\n                    return;\r\n                  }\r\n                  setFistValue(fist);\r\n                  handleSubmit(fist);\r\n                }}\r\n                disabled={hasSubmitted}\r\n                type={handleButtonColor(\r\n                  fist,\r\n                  fistValue,\r\n                  hasSubmitted,\r\n                  isCorrect\r\n                )}\r\n                key={i}\r\n              >\r\n                {fist.replace(\"_\", \"-\")}\r\n              </Button>\r\n            ))}\r\n          </div>\r\n        </Fragment>\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <div className=\"setup\">{setup}</div>\r\n      <div className=\"prompt\">{prompt}</div>\r\n      <div className=\"input\">{renderType()}</div>\r\n    </Container>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { Button } from \"../../components/Button.component\";\r\nimport { DonenessTypes } from \"./questions\";\r\nimport { handleButtonColor } from \"../../helper\";\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n\r\n  .setup {\r\n  }\r\n  .prompt {\r\n    font-weight: bold;\r\n    margin: 2em auto 1em auto;\r\n  }\r\n  .input {\r\n    margin-top: 2em;\r\n    box-sizing: border-box;\r\n\r\n    .value {\r\n      text-align: center;\r\n      margin-bottom: 2em;\r\n      color: black;\r\n\r\n      span.bold {\r\n        font-size: 2em;\r\n        font-weight: bold;\r\n        color: black;\r\n      }\r\n    }\r\n\r\n    .wrapper {\r\n      box-sizing: border-box;\r\n      margin: 0 auto;\r\n      height: 300px;\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n\r\n      img {\r\n        height: 250px;\r\n        border: 4px solid gray;\r\n      }\r\n    }\r\n    .choices {\r\n      display: flex;\r\n      justify-content: center;\r\n      margin: 1em 0 2em 0;\r\n    }\r\n  }\r\n\r\n  .buttons,\r\n  .feedback {\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    margin: 1em 0;\r\n  }\r\n`;\r\n\r\nexport default ({ qInfo, hasSubmitted, handleSubmit, isCorrect }) => {\r\n  const { scenario, part } = useParams();\r\n  const [value, setValue] = useState(null);\r\n  const { setup, prompt, img } = qInfo;\r\n\r\n  useEffect(() => {\r\n    // Check localstorage to see if q has already been submitted, if so populate value\r\n    const cachedData = JSON.parse(localStorage.getItem(`s${scenario}p${part}`));\r\n    if (!cachedData) return\r\n    setValue(cachedData.selectedVal);\r\n  }, [scenario, part]);\r\n\r\n  const handleClick = (e, val) => {\r\n    e.preventDefault();\r\n    if (hasSubmitted) {\r\n      return;\r\n    }\r\n    setValue(val);\r\n    handleSubmit(val);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <div className=\"setup\">{setup}</div>\r\n      <div className=\"prompt\">{prompt}</div>\r\n      <div className=\"input\">\r\n        <div className=\"wrapper\">\r\n          <img src={img} alt=\"what-steak\"></img>\r\n        </div>\r\n        <div className=\"choices\">\r\n          {Object.keys(DonenessTypes).map((done, i) => (\r\n            <Button\r\n              onClick={(e) => handleClick(e, done)}\r\n              disabled={hasSubmitted}\r\n              type={handleButtonColor(done, value, hasSubmitted, isCorrect)}\r\n              key={i}\r\n            >\r\n              {done.replace(\"_\", \"-\")}\r\n            </Button>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n","import React, { Fragment, useState, useEffect } from \"react\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { IoIosArrowBack, IoIosArrowForward } from \"react-icons/io\";\r\n\r\nimport { getPrevAndNextQuestionPageRoute } from \"../../helper\";\r\nimport { QuestionTypes, questions } from \"./questions\";\r\nimport { Button } from \"../../components/Button.component\";\r\nimport Section from \"../../components/Section.component\";\r\nimport Q1 from \"./Q1.component\";\r\nimport Q2 from \"./Q2.component\";\r\nimport Q3 from \"./Q3.component\";\r\n\r\nconst Container = styled(Section)`\r\n  .buttons,\r\n  .feedback {\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    margin: 0 0 1em 0;\r\n    /* height: 1em; */\r\n  }\r\n`;\r\n\r\nconst Feedback = styled.span`\r\n  color: ${({ right }) => (right ? \"green\" : \"red\")};\r\n  font-weight: bold;\r\n`;\r\n\r\nconst QuestionSection = () => {\r\n  const { scenario, part } = useParams();\r\n  const history = useHistory();\r\n\r\n  const currQ = questions.find(\r\n    (q) => q.scenario === parseInt(scenario) && q.part === parseInt(part)\r\n  );\r\n  const [prevRoute, nextRoute] = getPrevAndNextQuestionPageRoute();\r\n\r\n  const [hasSubmitted, setHasSubmitted] = useState(false);\r\n  const [isCorrect, setIsCorrect] = useState(false);\r\n\r\n  const { type, validate, correctFeedback, incorrectFeedback, qInfo } = currQ;\r\n\r\n  useEffect(() => {\r\n    // Check localstorage to see if q has already been submitted, if so populate hasSubmitted and isCorrect\r\n    const cachedData = JSON.parse(localStorage.getItem(`s${scenario}p${part}`));\r\n    if (!cachedData) return;\r\n    setHasSubmitted(cachedData.hasSubmitted);\r\n    setIsCorrect(cachedData.isCorrect);\r\n  }, [part, scenario]);\r\n\r\n  const handleSubmit = (selectedVal) => {\r\n    setHasSubmitted(true);\r\n    const isCorrect = validate(selectedVal);\r\n    setIsCorrect(isCorrect); // verify\r\n\r\n    localStorage.setItem(\r\n      `s${scenario}p${part}`,\r\n      JSON.stringify({ hasSubmitted: true, isCorrect, selectedVal })\r\n    );\r\n\r\n    localStorage.setItem(\r\n      `quiz_progress`,\r\n      JSON.stringify({\r\n        lastUnansweredQuestion: { scenario, part },\r\n        isQuizFinished: nextRoute === \"/quiz/end\",\r\n      })\r\n    );\r\n  };\r\n\r\n  const renderQuestionType = () => {\r\n    if (type === QuestionTypes.NUMBER) {\r\n      return (\r\n        <Q1\r\n          qInfo={qInfo}\r\n          hasSubmitted={hasSubmitted}\r\n          handleSubmit={handleSubmit}\r\n          isCorrect={isCorrect}\r\n        />\r\n      );\r\n    } else if (type === QuestionTypes.TACTILE) {\r\n      return (\r\n        <Q2\r\n          qInfo={qInfo}\r\n          hasSubmitted={hasSubmitted}\r\n          handleSubmit={handleSubmit}\r\n          isCorrect={isCorrect}\r\n        />\r\n      );\r\n    } else if (type === QuestionTypes.MULTIPLE_CHOICE) {\r\n      return (\r\n        <Fragment>\r\n          <Q3\r\n            qInfo={qInfo}\r\n            hasSubmitted={hasSubmitted}\r\n            handleSubmit={handleSubmit}\r\n            isCorrect={isCorrect}\r\n          />\r\n        </Fragment>\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <h2>\r\n        Question {scenario}.{part}\r\n      </h2>\r\n      {renderQuestionType()}\r\n      <div className=\"feedback\">\r\n        {hasSubmitted && (\r\n          <Feedback right={isCorrect}>\r\n            {isCorrect ? correctFeedback : incorrectFeedback}\r\n          </Feedback>\r\n        )}\r\n      </div>\r\n      <div className=\"buttons\">\r\n        {prevRoute !== \"/quiz/start\" && ( // if first question, don't show previous button\r\n          <Button\r\n            icon\r\n            onClick={() => {\r\n              history.push(prevRoute);\r\n            }}\r\n          >\r\n            <IoIosArrowBack />\r\n          </Button>\r\n        )}\r\n        {hasSubmitted && (\r\n          <Button\r\n            icon={nextRoute !== \"/quiz/end\"}\r\n            onClick={() => {\r\n              setHasSubmitted(false);\r\n              setIsCorrect(false);\r\n              history.push(nextRoute);\r\n            }}\r\n          >\r\n            {nextRoute === \"/quiz/end\" ? \"Finish\" : <IoIosArrowForward />}\r\n          </Button>\r\n        )}\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default QuestionSection;\r\n","import React, { Fragment } from \"react\";\r\nimport { Route, Switch, useRouteMatch, useHistory } from \"react-router-dom\";\r\nimport { IoIosArrowBack } from \"react-icons/io\";\r\n\r\nimport TitleSection from \"../../components/TitleSection.component\";\r\nimport Section from \"../../components/Section.component\";\r\nimport TwoCol from \"../../components/TwoColumn.layout\";\r\nimport Scrollbar from \"../../components/Scrollbar.component\";\r\nimport { ButtonLink, Button } from \"../../components/Button.component\";\r\nimport QuestionSection from \"./QuestionsSection.component\";\r\n\r\nimport { questions } from \"./questions\";\r\nimport { redirectQuiz } from \"../../helper\";\r\n\r\nconst QuizStart = () => {\r\n  redirectQuiz();\r\n\r\n  return (\r\n    <Fragment>\r\n      <TitleSection>\r\n        <h1>Quiz</h1>\r\n        <p>No pressure, only your pride is at steak!</p>\r\n      </TitleSection>\r\n      <Section center>\r\n        <h2>Ready?</h2>\r\n        <ButtonLink to={`/quiz/1/1`}>Start the quiz!</ButtonLink>\r\n      </Section>\r\n      <Section center>\r\n        <h2>Need to review?</h2>\r\n        <ButtonLink to=\"/cheat-sheet\">Cheat Sheet</ButtonLink>\r\n      </Section>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nconst QuizQuestions = () => {\r\n  return (\r\n    <TwoCol>\r\n      <TwoCol.Left width={80}>\r\n        <QuestionSection />\r\n      </TwoCol.Left>\r\n      <TwoCol.Right minWidth={100} width={20}>\r\n        <Scrollbar sections={questions} />\r\n      </TwoCol.Right>\r\n    </TwoCol>\r\n  );\r\n};\r\n\r\nconst QuizEnd = () => {\r\n  const history = useHistory();\r\n  redirectQuiz();\r\n\r\n  return (\r\n    <Fragment>\r\n      <TitleSection>\r\n        <h1>Quiz Finished!</h1>\r\n      </TitleSection>\r\n      <Section center>\r\n        <h2>\r\n          You got{\" \"}\r\n          {questions\r\n            .map(({ scenario, part }, i) =>\r\n              JSON.parse(localStorage.getItem(`s${scenario}p${part}`)).isCorrect\r\n                ? 1\r\n                : 0\r\n            )\r\n            .reduce((a, b) => a + b, 0)}{\" \"}\r\n          out of {questions.length} questions correct.\r\n        </h2>\r\n        <div className=\"flex-h\">\r\n          <Button\r\n            icon\r\n            onClick={() => {\r\n              // remove cached progress\r\n              const lastQ = questions.slice(-1)[0];\r\n              history.push(`/quiz/${lastQ.scenario}/${lastQ.part}`);\r\n            }}\r\n          >\r\n            <IoIosArrowBack />\r\n          </Button>\r\n          <Button\r\n            onClick={() => {\r\n              // remove cached progress\r\n              questions.forEach(({ scenario, part }, i) => {\r\n                localStorage.removeItem(`s${scenario}p${part}`);\r\n              });\r\n              localStorage.removeItem(\"quiz_progress\");\r\n              history.push(`/quiz/start`);\r\n            }}\r\n          >\r\n            Try again\r\n          </Button>\r\n        </div>\r\n      </Section>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nconst QuizRoot = () => {\r\n  const { path } = useRouteMatch();\r\n  // redirectQuiz();\r\n\r\n  return (\r\n    <Switch>\r\n      <Route exact path={`${path}/start`}>\r\n        <QuizStart />\r\n      </Route>\r\n      <Route exact path={`${path}/end`}>\r\n        <QuizEnd />\r\n      </Route>\r\n      <Route path={`${path}/:scenario(\\\\d+)/:part(\\\\d+)`}>\r\n        <QuizQuestions />\r\n      </Route>\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default QuizRoot;\r\n","import React from \"react\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\n\r\nimport Home from \"./Home\";\r\nimport Levels from \"./Levels\";\r\nimport Palm from \"./Palm\";\r\nimport Face from \"./Face\";\r\nimport Fist from \"./Fist\";\r\nimport CheatSheet from \"./CheatSheet\";\r\nimport Quiz from \"./Quiz\";\r\n\r\nconst Navigator = () => {\r\n  return (\r\n    <Switch>\r\n      <Route exact path=\"/\">\r\n        <Home />\r\n      </Route>\r\n      <Route path=\"/levels\">\r\n        <Levels />\r\n      </Route>\r\n      <Route path=\"/palm\">\r\n        <Palm />\r\n      </Route>\r\n      <Route path=\"/face\">\r\n        <Face />\r\n      </Route>\r\n      <Route path=\"/fist\">\r\n        <Fist />\r\n      </Route>\r\n      <Route path=\"/cheat-sheet\">\r\n        <CheatSheet />\r\n      </Route>\r\n      <Route path=\"/quiz\">\r\n        <Quiz />\r\n      </Route>\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default Navigator;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background-color: skyblue;\r\n  height: 100px;\r\n`;\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <Container>\r\n      <h2>Footer</h2>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from \"react\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport ReactBreakpoints from \"react-breakpoints\";\n\nimport { breakpoints } from \"../../helper\";\nimport { RootBackground, Body } from \"./style\";\nimport Navbar from \"../Navbar\";\nimport Navigator from \"../Navigator\";\nimport Footer from \"../Footer\";\n\nconst App = () => {\n  return (\n    <ReactBreakpoints breakpoints={breakpoints}>\n      <Router>\n        <RootBackground>\n          <Navbar />\n          <Body>\n            <Navigator />\n          </Body>\n          <Footer />\n        </RootBackground>\n      </Router>\n    </ReactBreakpoints>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./pages/App\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}